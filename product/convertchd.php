<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO chd (`dl_state`,`dl_number`,`bankacct`,`chk_nbr`,`chk_dte`,`chk_amt`,`reason`,`pd_amt`,`cntr`,`file_loc`,`status`,`customer`,`store`,`who`,`memo`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:dl_state,:dl_number,:bankacct,:chk_nbr,:chk_dte,:chk_amt,:reason,:pd_amt,:cntr,:file_loc,:status,:customer,:store,:who,:memo,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`dl_state` = :dl_state,		`dl_number` = :dl_number,		`bankacct` = :bankacct,		`chk_nbr` = :chk_nbr,		`chk_dte` = :chk_dte,		`chk_amt` = :chk_amt,		`reason` = :reason,		`pd_amt` = :pd_amt,		`cntr` = :cntr,		`file_loc` = :file_loc,		`status` = :status,		`customer` = :customer,		`store` = :store,		`who` = :who,		`memo` = :memo,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thisdl_state=strip_tags($data->dl_state);		$thisdl_number=strip_tags($data->dl_number);		$thisbankacct=strip_tags($data->bankacct);		$thischk_nbr=strip_tags($data->chk_nbr);		$thischk_dte=strip_tags($data->chk_dte);		$thischk_amt=strip_tags($data->chk_amt);		$thisreason=strip_tags($data->reason);		$thispd_amt=strip_tags($data->pd_amt);		$thiscntr=strip_tags($data->cntr);		$thisfile_loc=strip_tags($data->file_loc);		$thisstatus=strip_tags($data->status);		$thiscustomer=strip_tags($data->customer);		$thisstore=strip_tags($data->store);		$thiswho=strip_tags($data->who);		$thismemo=strip_tags($data->memo);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':dl_state', $thisdl_state);		$stmt->bindParam(':dl_number', $thisdl_number);		$stmt->bindParam(':bankacct', $thisbankacct);		$stmt->bindParam(':chk_nbr', $thischk_nbr);		$stmt->bindParam(':chk_dte', $thischk_dte);		$stmt->bindParam(':chk_amt', $thischk_amt);		$stmt->bindParam(':reason', $thisreason);		$stmt->bindParam(':pd_amt', $thispd_amt);		$stmt->bindParam(':cntr', $thiscntr);		$stmt->bindParam(':file_loc', $thisfile_loc);		$stmt->bindParam(':status', $thisstatus);		$stmt->bindParam(':customer', $thiscustomer);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>