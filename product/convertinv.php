<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));		$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO inv (`type`,`name`,`ml`,`sname`,`pack`,`sku`,`ssku`,`stat`,`mtd_units`,`weeks`,`sdate`,`mtd_dol`,`mtd_prof`,`ytd_units`,`ytd_dol`,`ytd_prof`,`cat`,`scat`,`depos`,`acost`,`lcost`,`pvend`,`lvend`,`pdate`,`smin`,`sord`,`pref`,`suprof`,`scprof`,`freeze`,`sweeks`,`freeze_w`,`shelf`,`rshelf`,`sloc`,`bloc`,`proof`,`cflag`,`unit_case`,`freeform1`,`freeform2`,`freeform3`,`freeform4`,`mfg_key`,`sell`,`who`,`memo`,`fson`,`fsfactor`,`cdate`,`image`,`sent`,`vintage`,`websent`,`typename`,`invprice`,`invsale`,`invclub`,`tags`,`esl`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:type,:name,:ml,:sname,:pack,:sku,:ssku,:stat,:mtd_units,:weeks,:sdate,:mtd_dol,:mtd_prof,:ytd_units,:ytd_dol,:ytd_prof,:cat,:scat,:depos,:acost,:lcost,:pvend,:lvend,:pdate,:smin,:sord,:pref,:suprof,:scprof,:freeze,:sweeks,:freeze_w,:shelf,:rshelf,:sloc,:bloc,:proof,:cflag,:unit_case,:freeform1,:freeform2,:freeform3,:freeform4,:mfg_key,:sell,:who,:memo,:fson,:fsfactor,:cdate,:image,:sent,:vintage,:websent,:typename,:invprice,:invsale,:invclub,:tags,:esl,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`type` = :type,		`name` = :name,		`ml` = :ml,		`sname` = :sname,		`pack` = :pack,		`sku` = :sku,		`ssku` = :ssku,		`stat` = :stat,		`mtd_units` = :mtd_units,		`weeks` = :weeks,		`sdate` = :sdate,		`mtd_dol` = :mtd_dol,		`mtd_prof` = :mtd_prof,		`ytd_units` = :ytd_units,		`ytd_dol` = :ytd_dol,		`ytd_prof` = :ytd_prof,		`cat` = :cat,		`scat` = :scat,		`depos` = :depos,		`acost` = :acost,		`lcost` = :lcost,		`pvend` = :pvend,		`lvend` = :lvend,		`pdate` = :pdate,		`smin` = :smin,		`sord` = :sord,		`pref` = :pref,		`suprof` = :suprof,		`scprof` = :scprof,		`freeze` = :freeze,		`sweeks` = :sweeks,		`freeze_w` = :freeze_w,		`shelf` = :shelf,		`rshelf` = :rshelf,		`sloc` = :sloc,		`bloc` = :bloc,		`proof` = :proof,		`cflag` = :cflag,		`unit_case` = :unit_case,		`freeform1` = :freeform1,		`freeform2` = :freeform2,		`freeform3` = :freeform3,		`freeform4` = :freeform4,		`mfg_key` = :mfg_key,		`sell` = :sell,		`who` = :who,		`memo` = :memo,		`fson` = :fson,		`fsfactor` = :fsfactor,		`cdate` = :cdate,		`image` = :image,		`sent` = :sent,		`vintage` = :vintage,		`websent` = :websent,		`typename` = :typename,		`invprice` = :invprice,		`invsale` = :invsale,		`invclub` = :invclub,		`tags` = :tags,		`esl` = :esl,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thistype=strip_tags($data->type);		$thisname=strip_tags($data->name);		$thisml=strip_tags($data->ml);		$thissname=strip_tags($data->sname);		$thispack=strip_tags($data->pack);		$thissku=strip_tags($data->sku);		$thisssku=strip_tags($data->ssku);		$thisstat=strip_tags($data->stat);		$thismtd_units=strip_tags($data->mtd_units);		$thisweeks=strip_tags($data->weeks);		$thissdate=strip_tags($data->sdate);		$thismtd_dol=strip_tags($data->mtd_dol);		$thismtd_prof=strip_tags($data->mtd_prof);		$thisytd_units=strip_tags($data->ytd_units);		$thisytd_dol=strip_tags($data->ytd_dol);		$thisytd_prof=strip_tags($data->ytd_prof);		$thiscat=strip_tags($data->cat);		$thisscat=strip_tags($data->scat);		$thisdepos=strip_tags($data->depos);		$thisacost=strip_tags($data->acost);		$thislcost=strip_tags($data->lcost);		$thispvend=strip_tags($data->pvend);		$thislvend=strip_tags($data->lvend);		$thispdate=strip_tags($data->pdate);		$thissmin=strip_tags($data->smin);		$thissord=strip_tags($data->sord);		$thispref=strip_tags($data->pref);		$thissuprof=strip_tags($data->suprof);		$thisscprof=strip_tags($data->scprof);		$thisfreeze=strip_tags($data->freeze);		$thissweeks=strip_tags($data->sweeks);		$thisfreeze_w=strip_tags($data->freeze_w);		$thisshelf=strip_tags($data->shelf);		$thisrshelf=strip_tags($data->rshelf);		$thissloc=strip_tags($data->sloc);		$thisbloc=strip_tags($data->bloc);		$thisproof=strip_tags($data->proof);		$thiscflag=strip_tags($data->cflag);		$thisunit_case=strip_tags($data->unit_case);		$thisfreeform1=strip_tags($data->freeform1);		$thisfreeform2=strip_tags($data->freeform2);		$thisfreeform3=strip_tags($data->freeform3);		$thisfreeform4=strip_tags($data->freeform4);		$thismfg_key=strip_tags($data->mfg_key);		$thissell=strip_tags($data->sell);		$thiswho=strip_tags($data->who);		$thismemo=strip_tags($data->memo);		$thisfson=strip_tags($data->fson);		$thisfsfactor=strip_tags($data->fsfactor);		$thiscdate=strip_tags($data->cdate);		$thisimage=strip_tags($data->image);		$thissent=strip_tags($data->sent);		$thisvintage=strip_tags($data->vintage);		$thiswebsent=strip_tags($data->websent);		$thistypename=strip_tags($data->typename);		$thisinvprice=strip_tags($data->invprice);		$thisinvsale=strip_tags($data->invsale);		$thisinvclub=strip_tags($data->invclub);		$thistags=strip_tags($data->tags);		$thisesl=strip_tags($data->esl);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':name', $thisname);		$stmt->bindParam(':ml', $thisml);		$stmt->bindParam(':sname', $thissname);		$stmt->bindParam(':pack', $thispack);		$stmt->bindParam(':sku', $thissku);		$stmt->bindParam(':ssku', $thisssku);		$stmt->bindParam(':stat', $thisstat);		$stmt->bindParam(':mtd_units', $thismtd_units);		$stmt->bindParam(':weeks', $thisweeks);		$stmt->bindParam(':sdate', $thissdate);		$stmt->bindParam(':mtd_dol', $thismtd_dol);		$stmt->bindParam(':mtd_prof', $thismtd_prof);		$stmt->bindParam(':ytd_units', $thisytd_units);		$stmt->bindParam(':ytd_dol', $thisytd_dol);		$stmt->bindParam(':ytd_prof', $thisytd_prof);		$stmt->bindParam(':cat', $thiscat);		$stmt->bindParam(':scat', $thisscat);		$stmt->bindParam(':depos', $thisdepos);		$stmt->bindParam(':acost', $thisacost);		$stmt->bindParam(':lcost', $thislcost);		$stmt->bindParam(':pvend', $thispvend);		$stmt->bindParam(':lvend', $thislvend);		$stmt->bindParam(':pdate', $thispdate);		$stmt->bindParam(':smin', $thissmin);		$stmt->bindParam(':sord', $thissord);		$stmt->bindParam(':pref', $thispref);		$stmt->bindParam(':suprof', $thissuprof);		$stmt->bindParam(':scprof', $thisscprof);		$stmt->bindParam(':freeze', $thisfreeze);		$stmt->bindParam(':sweeks', $thissweeks);		$stmt->bindParam(':freeze_w', $thisfreeze_w);		$stmt->bindParam(':shelf', $thisshelf);		$stmt->bindParam(':rshelf', $thisrshelf);		$stmt->bindParam(':sloc', $thissloc);		$stmt->bindParam(':bloc', $thisbloc);		$stmt->bindParam(':proof', $thisproof);		$stmt->bindParam(':cflag', $thiscflag);		$stmt->bindParam(':unit_case', $thisunit_case);		$stmt->bindParam(':freeform1', $thisfreeform1);		$stmt->bindParam(':freeform2', $thisfreeform2);		$stmt->bindParam(':freeform3', $thisfreeform3);		$stmt->bindParam(':freeform4', $thisfreeform4);		$stmt->bindParam(':mfg_key', $thismfg_key);		$stmt->bindParam(':sell', $thissell);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':fson', $thisfson);		$stmt->bindParam(':fsfactor', $thisfsfactor);		$stmt->bindParam(':cdate', $thiscdate);		$stmt->bindParam(':image', $thisimage);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':vintage', $thisvintage);		$stmt->bindParam(':websent', $thiswebsent);		$stmt->bindParam(':typename', $thistypename);		$stmt->bindParam(':invprice', $thisinvprice);		$stmt->bindParam(':invsale', $thisinvsale);		$stmt->bindParam(':invclub', $thisinvclub);		$stmt->bindParam(':tags', $thistags);		$stmt->bindParam(':esl', $thisesl);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>