<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO vin (`sku`,`vintage`,`freeform1`,`freeform2`,`freeform3`,`freeform4`,`memo`,`who`,`sent`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:sku,:vintage,:freeform1,:freeform2,:freeform3,:freeform4,:memo,:who,:sent,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`sku` = :sku,		`vintage` = :vintage,		`freeform1` = :freeform1,		`freeform2` = :freeform2,		`freeform3` = :freeform3,		`freeform4` = :freeform4,		`memo` = :memo,		`who` = :who,		`sent` = :sent,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thissku=strip_tags($data->sku);		$thisvintage=strip_tags($data->vintage);		$thisfreeform1=strip_tags($data->freeform1);		$thisfreeform2=strip_tags($data->freeform2);		$thisfreeform3=strip_tags($data->freeform3);		$thisfreeform4=strip_tags($data->freeform4);		$thismemo=strip_tags($data->memo);		$thiswho=strip_tags($data->who);		$thissent=strip_tags($data->sent);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':sku', $thissku);		$stmt->bindParam(':vintage', $thisvintage);		$stmt->bindParam(':freeform1', $thisfreeform1);		$stmt->bindParam(':freeform2', $thisfreeform2);		$stmt->bindParam(':freeform3', $thisfreeform3);		$stmt->bindParam(':freeform4', $thisfreeform4);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>