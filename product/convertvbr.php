<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO vbr (`vtype`,`brand`,`ml`,`vintage`,`sname`,`descript`,`bestbot1`,`bestvend1`,`bestbot2`,`bestvend2`,`updown`,`proof`,`firstdate`,`lastdate`,`sku`,`vendors`,`clearflag`,`dummy`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:vtype,:brand,:ml,:vintage,:sname,:descript,:bestbot1,:bestvend1,:bestbot2,:bestvend2,:updown,:proof,:firstdate,:lastdate,:sku,:vendors,:clearflag,:dummy,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`vtype` = :vtype,		`brand` = :brand,		`ml` = :ml,		`vintage` = :vintage,		`sname` = :sname,		`descript` = :descript,		`bestbot1` = :bestbot1,		`bestvend1` = :bestvend1,		`bestbot2` = :bestbot2,		`bestvend2` = :bestvend2,		`updown` = :updown,		`proof` = :proof,		`firstdate` = :firstdate,		`lastdate` = :lastdate,		`sku` = :sku,		`vendors` = :vendors,		`clearflag` = :clearflag,		`dummy` = :dummy,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thisvtype=strip_tags($data->vtype);		$thisbrand=strip_tags($data->brand);		$thisml=strip_tags($data->ml);		$thisvintage=strip_tags($data->vintage);		$thissname=strip_tags($data->sname);		$thisdescript=strip_tags($data->descript);		$thisbestbot1=strip_tags($data->bestbot1);		$thisbestvend1=strip_tags($data->bestvend1);		$thisbestbot2=strip_tags($data->bestbot2);		$thisbestvend2=strip_tags($data->bestvend2);		$thisupdown=strip_tags($data->updown);		$thisproof=strip_tags($data->proof);		$thisfirstdate=strip_tags($data->firstdate);		$thislastdate=strip_tags($data->lastdate);		$thissku=strip_tags($data->sku);		$thisvendors=strip_tags($data->vendors);		$thisclearflag=strip_tags($data->clearflag);		$thisdummy=strip_tags($data->dummy);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':vtype', $thisvtype);		$stmt->bindParam(':brand', $thisbrand);		$stmt->bindParam(':ml', $thisml);		$stmt->bindParam(':vintage', $thisvintage);		$stmt->bindParam(':sname', $thissname);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':bestbot1', $thisbestbot1);		$stmt->bindParam(':bestvend1', $thisbestvend1);		$stmt->bindParam(':bestbot2', $thisbestbot2);		$stmt->bindParam(':bestvend2', $thisbestvend2);		$stmt->bindParam(':updown', $thisupdown);		$stmt->bindParam(':proof', $thisproof);		$stmt->bindParam(':firstdate', $thisfirstdate);		$stmt->bindParam(':lastdate', $thislastdate);		$stmt->bindParam(':sku', $thissku);		$stmt->bindParam(':vendors', $thisvendors);		$stmt->bindParam(':clearflag', $thisclearflag);		$stmt->bindParam(':dummy', $thisdummy);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>