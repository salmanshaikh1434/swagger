<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO hnd (`listnum`,`line`,`listname`,`listtype`,`sku`,`type`,`descript`,`sname`,`ml`,`pack`,`ccost`,`floor`,`back`,`shipped`,`kits`,`posted`,`store`,`upc`,`glinv`,`glexp`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:listnum,:line,:listname,:listtype,:sku,:type,:descript,:sname,:ml,:pack,:ccost,:floor,:back,:shipped,:kits,:posted,:store,:upc,:glinv,:glexp,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`listnum` = :listnum,		`line` = :line,		`listname` = :listname,		`listtype` = :listtype,		`sku` = :sku,		`type` = :type,		`descript` = :descript,		`sname` = :sname,		`ml` = :ml,		`pack` = :pack,		`ccost` = :ccost,		`floor` = :floor,		`back` = :back,		`shipped` = :shipped,		`kits` = :kits,		`posted` = :posted,		`store` = :store,		`upc` = :upc,		`glinv` = :glinv,		`glexp` = :glexp,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thislistnum=strip_tags($data->listnum);		$thisline=strip_tags($data->line);		$thislistname=strip_tags($data->listname);		$thislisttype=strip_tags($data->listtype);		$thissku=strip_tags($data->sku);		$thistype=strip_tags($data->type);		$thisdescript=strip_tags($data->descript);		$thissname=strip_tags($data->sname);		$thisml=strip_tags($data->ml);		$thispack=strip_tags($data->pack);		$thisccost=strip_tags($data->ccost);		$thisfloor=strip_tags($data->floor);		$thisback=strip_tags($data->back);		$thisshipped=strip_tags($data->shipped);		$thiskits=strip_tags($data->kits);		$thisposted=strip_tags($data->posted);		$thisstore=strip_tags($data->store);		$thisupc=strip_tags($data->upc);		$thisglinv=strip_tags($data->glinv);		$thisglexp=strip_tags($data->glexp);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':listnum', $thislistnum);		$stmt->bindParam(':line', $thisline);		$stmt->bindParam(':listname', $thislistname);		$stmt->bindParam(':listtype', $thislisttype);		$stmt->bindParam(':sku', $thissku);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':sname', $thissname);		$stmt->bindParam(':ml', $thisml);		$stmt->bindParam(':pack', $thispack);		$stmt->bindParam(':ccost', $thisccost);		$stmt->bindParam(':floor', $thisfloor);		$stmt->bindParam(':back', $thisback);		$stmt->bindParam(':shipped', $thisshipped);		$stmt->bindParam(':kits', $thiskits);		$stmt->bindParam(':posted', $thisposted);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':upc', $thisupc);		$stmt->bindParam(':glinv', $thisglinv);		$stmt->bindParam(':glexp', $thisglexp);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>