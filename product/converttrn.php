<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO trn (`source`,`account`,`tdate`,`adate`,`transact`,`document`,`type`,`lamount`,`ramount`,`balance`,`checkno`,`clear`,`status`,`excode`,`store`,`department`,`glaccount`,`who`,`skipstat`,`memo`,`sent`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:source,:account,:tdate,:adate,:transact,:document,:type,:lamount,:ramount,:balance,:checkno,:clear,:status,:excode,:store,:department,:glaccount,:who,:skipstat,:memo,:sent,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`source` = :source,		`account` = :account,		`tdate` = :tdate,		`adate` = :adate,		`transact` = :transact,		`document` = :document,		`type` = :type,		`lamount` = :lamount,		`ramount` = :ramount,		`balance` = :balance,		`checkno` = :checkno,		`clear` = :clear,		`status` = :status,		`excode` = :excode,		`store` = :store,		`department` = :department,		`glaccount` = :glaccount,		`who` = :who,		`skipstat` = :skipstat,		`memo` = :memo,		`sent` = :sent,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thissource=strip_tags($data->source);		$thisaccount=strip_tags($data->account);		$thistdate=strip_tags($data->tdate);		$thisadate=strip_tags($data->adate);		$thistransact=strip_tags($data->transact);		$thisdocument=strip_tags($data->document);		$thistype=strip_tags($data->type);		$thislamount=strip_tags($data->lamount);		$thisramount=strip_tags($data->ramount);		$thisbalance=strip_tags($data->balance);		$thischeckno=strip_tags($data->checkno);		$thisclear=strip_tags($data->clear);		$thisstatus=strip_tags($data->status);		$thisexcode=strip_tags($data->excode);		$thisstore=strip_tags($data->store);		$thisdepartment=strip_tags($data->department);		$thisglaccount=strip_tags($data->glaccount);		$thiswho=strip_tags($data->who);		$thisskipstat=strip_tags($data->skipstat);		$thismemo=strip_tags($data->memo);		$thissent=strip_tags($data->sent);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':source', $thissource);		$stmt->bindParam(':account', $thisaccount);		$stmt->bindParam(':tdate', $thistdate);		$stmt->bindParam(':adate', $thisadate);		$stmt->bindParam(':transact', $thistransact);		$stmt->bindParam(':document', $thisdocument);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':lamount', $thislamount);		$stmt->bindParam(':ramount', $thisramount);		$stmt->bindParam(':balance', $thisbalance);		$stmt->bindParam(':checkno', $thischeckno);		$stmt->bindParam(':clear', $thisclear);		$stmt->bindParam(':status', $thisstatus);		$stmt->bindParam(':excode', $thisexcode);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':department', $thisdepartment);		$stmt->bindParam(':glaccount', $thisglaccount);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':skipstat', $thisskipstat);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>