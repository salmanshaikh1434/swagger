<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO emp (`id`,`uid`,`last_name`,`first_name`,`store`,`title`,`street1`,`street2`,`city`,`state`,`zip`,`homephone`,`workphone`,`carphone`,`fax`,`password`,`security`,`poslevel`,`invlevel`,`actlevel`,`admlevel`,`hire_date`,`birth_date`,`last_raise`,`ssn`,`notes`,`who`,`lastlogin`,`payrate`,`terminate`,`eserver`,`euser`,`epass`,`port`,`ssl`,`auth`,`from`,`sent`,`email`,`cardnum`,`memo`,`pws`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:id,:uid,:last_name,:first_name,:store,:title,:street1,:street2,:city,:state,:zip,:homephone,:workphone,:carphone,:fax,:password,:security,:poslevel,:invlevel,:actlevel,:admlevel,:hire_date,:birth_date,:last_raise,:ssn,:notes,:who,:lastlogin,:payrate,:terminate,:eserver,:euser,:epass,:port,:ssl,:auth,:from,:sent,:email,:cardnum,:memo,:pws,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`id` = :id,		`uid` = :uid,		`last_name` = :last_name,		`first_name` = :first_name,		`store` = :store,		`title` = :title,		`street1` = :street1,		`street2` = :street2,		`city` = :city,		`state` = :state,		`zip` = :zip,		`homephone` = :homephone,		`workphone` = :workphone,		`carphone` = :carphone,		`fax` = :fax,		`password` = :password,		`security` = :security,		`poslevel` = :poslevel,		`invlevel` = :invlevel,		`actlevel` = :actlevel,		`admlevel` = :admlevel,		`hire_date` = :hire_date,		`birth_date` = :birth_date,		`last_raise` = :last_raise,		`ssn` = :ssn,		`notes` = :notes,		`who` = :who,		`lastlogin` = :lastlogin,		`payrate` = :payrate,		`terminate` = :terminate,		`eserver` = :eserver,		`euser` = :euser,		`epass` = :epass,		`port` = :port,		`ssl` = :ssl,		`auth` = :auth,		`from` = :from,		`sent` = :sent,		`email` = :email,		`cardnum` = :cardnum,		`memo` = :memo,		`pws` = :pws,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thisid=strip_tags($data->id);		$thisuid=strip_tags($data->uid);		$thislast_name=strip_tags($data->last_name);		$thisfirst_name=strip_tags($data->first_name);		$thisstore=strip_tags($data->store);		$thistitle=strip_tags($data->title);		$thisstreet1=strip_tags($data->street1);		$thisstreet2=strip_tags($data->street2);		$thiscity=strip_tags($data->city);		$thisstate=strip_tags($data->state);		$thiszip=strip_tags($data->zip);		$thishomephone=strip_tags($data->homephone);		$thisworkphone=strip_tags($data->workphone);		$thiscarphone=strip_tags($data->carphone);		$thisfax=strip_tags($data->fax);		$thispassword=strip_tags($data->password);		$thissecurity=strip_tags($data->security);		$thisposlevel=strip_tags($data->poslevel);		$thisinvlevel=strip_tags($data->invlevel);		$thisactlevel=strip_tags($data->actlevel);		$thisadmlevel=strip_tags($data->admlevel);		$thishire_date=strip_tags($data->hire_date);		$thisbirth_date=strip_tags($data->birth_date);		$thislast_raise=strip_tags($data->last_raise);		$thisssn=strip_tags($data->ssn);		$thisnotes=strip_tags($data->notes);		$thiswho=strip_tags($data->who);		$thislastlogin=strip_tags($data->lastlogin);		$thispayrate=strip_tags($data->payrate);		$thisterminate=strip_tags($data->terminate);		$thiseserver=strip_tags($data->eserver);		$thiseuser=strip_tags($data->euser);		$thisepass=strip_tags($data->epass);		$thisport=strip_tags($data->port);		$thisssl=strip_tags($data->ssl);		$thisauth=strip_tags($data->auth);		$thisfrom=strip_tags($data->from);		$thissent=strip_tags($data->sent);		$thisemail=strip_tags($data->email);		$thiscardnum=strip_tags($data->cardnum);		$thismemo=strip_tags($data->memo);		$thispws=strip_tags($data->pws);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':id', $thisid);		$stmt->bindParam(':uid', $thisuid);		$stmt->bindParam(':last_name', $thislast_name);		$stmt->bindParam(':first_name', $thisfirst_name);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':title', $thistitle);		$stmt->bindParam(':street1', $thisstreet1);		$stmt->bindParam(':street2', $thisstreet2);		$stmt->bindParam(':city', $thiscity);		$stmt->bindParam(':state', $thisstate);		$stmt->bindParam(':zip', $thiszip);		$stmt->bindParam(':homephone', $thishomephone);		$stmt->bindParam(':workphone', $thisworkphone);		$stmt->bindParam(':carphone', $thiscarphone);		$stmt->bindParam(':fax', $thisfax);		$stmt->bindParam(':password', $thispassword);		$stmt->bindParam(':security', $thissecurity);		$stmt->bindParam(':poslevel', $thisposlevel);		$stmt->bindParam(':invlevel', $thisinvlevel);		$stmt->bindParam(':actlevel', $thisactlevel);		$stmt->bindParam(':admlevel', $thisadmlevel);		$stmt->bindParam(':hire_date', $thishire_date);		$stmt->bindParam(':birth_date', $thisbirth_date);		$stmt->bindParam(':last_raise', $thislast_raise);		$stmt->bindParam(':ssn', $thisssn);		$stmt->bindParam(':notes', $thisnotes);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':lastlogin', $thislastlogin);		$stmt->bindParam(':payrate', $thispayrate);		$stmt->bindParam(':terminate', $thisterminate);		$stmt->bindParam(':eserver', $thiseserver);		$stmt->bindParam(':euser', $thiseuser);		$stmt->bindParam(':epass', $thisepass);		$stmt->bindParam(':port', $thisport);		$stmt->bindParam(':ssl', $thisssl);		$stmt->bindParam(':auth', $thisauth);		$stmt->bindParam(':from', $thisfrom);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':email', $thisemail);		$stmt->bindParam(':cardnum', $thiscardnum);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':pws', $thispws);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>