<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO vnd (`vendor`,`firstname`,`lastname`,`vcode`,`street1`,`street2`,`city`,`state`,`zip`,`contact`,`phone`,`fax`,`modem`,`startdate`,`taxcode`,`terms`,`shipvia`,`crdlimit`,`balance`,`who`,`memo`,`includedep`,`sent`,`email`,`useware`,`inactive`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:vendor,:firstname,:lastname,:vcode,:street1,:street2,:city,:state,:zip,:contact,:phone,:fax,:modem,:startdate,:taxcode,:terms,:shipvia,:crdlimit,:balance,:who,:memo,:includedep,:sent,:email,:useware,:inactive,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`vendor` = :vendor,		`firstname` = :firstname,		`lastname` = :lastname,		`vcode` = :vcode,		`street1` = :street1,		`street2` = :street2,		`city` = :city,		`state` = :state,		`zip` = :zip,		`contact` = :contact,		`phone` = :phone,		`fax` = :fax,		`modem` = :modem,		`startdate` = :startdate,		`taxcode` = :taxcode,		`terms` = :terms,		`shipvia` = :shipvia,		`crdlimit` = :crdlimit,		`balance` = :balance,		`who` = :who,		`memo` = :memo,		`includedep` = :includedep,		`sent` = :sent,		`email` = :email,		`useware` = :useware,		`inactive` = :inactive,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel,		`qbooks` = :qbooks";		$stmt = $db->prepare($query);		$thisvendor=strip_tags($data->vendor);		$thisfirstname=strip_tags($data->firstname);		$thislastname=strip_tags($data->lastname);		$thisvcode=strip_tags($data->vcode);		$thisstreet1=strip_tags($data->street1);		$thisstreet2=strip_tags($data->street2);		$thiscity=strip_tags($data->city);		$thisstate=strip_tags($data->state);		$thiszip=strip_tags($data->zip);		$thiscontact=strip_tags($data->contact);		$thisphone=strip_tags($data->phone);		$thisfax=strip_tags($data->fax);		$thismodem=strip_tags($data->modem);		$thisstartdate=strip_tags($data->startdate);		$thistaxcode=strip_tags($data->taxcode);		$thisterms=strip_tags($data->terms);		$thisshipvia=strip_tags($data->shipvia);		$thiscrdlimit=strip_tags($data->crdlimit);		$thisbalance=strip_tags($data->balance);		$thiswho=strip_tags($data->who);		$thismemo=strip_tags($data->memo);		$thisincludedep=strip_tags($data->includedep);		$thissent=strip_tags($data->sent);		$thisemail=strip_tags($data->email);		$thisuseware=strip_tags($data->useware);		$thisinactive=strip_tags($data->inactive);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$thisqbooks=strip_tags($data->qbooks);		$stmt->bindParam(':vendor', $thisvendor);		$stmt->bindParam(':firstname', $thisfirstname);		$stmt->bindParam(':lastname', $thislastname);		$stmt->bindParam(':vcode', $thisvcode);		$stmt->bindParam(':street1', $thisstreet1);		$stmt->bindParam(':street2', $thisstreet2);		$stmt->bindParam(':city', $thiscity);		$stmt->bindParam(':state', $thisstate);		$stmt->bindParam(':zip', $thiszip);		$stmt->bindParam(':contact', $thiscontact);		$stmt->bindParam(':phone', $thisphone);		$stmt->bindParam(':fax', $thisfax);		$stmt->bindParam(':modem', $thismodem);		$stmt->bindParam(':startdate', $thisstartdate);		$stmt->bindParam(':taxcode', $thistaxcode);		$stmt->bindParam(':terms', $thisterms);		$stmt->bindParam(':shipvia', $thisshipvia);		$stmt->bindParam(':crdlimit', $thiscrdlimit);		$stmt->bindParam(':balance', $thisbalance);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':includedep', $thisincludedep);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':email', $thisemail);		$stmt->bindParam(':useware', $thisuseware);		$stmt->bindParam(':inactive', $thisinactive);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->bindParam(':qbooks', $thisqbooks);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>