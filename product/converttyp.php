<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO typ (`type`,`name`,`scat1`,`scat2`,`unit_case`,`suprof`,`scprof`,`sweeks`,`ml1`,`uprof1`,`cprof1`,`weeks1`,`ml2`,`uprof2`,`cprof2`,`weeks2`,`ml3`,`uprof3`,`cprof3`,`weeks3`,`ml4`,`uprof4`,`cprof4`,`weeks4`,`who`,`disc`,`disc1`,`disc2`,`disc3`,`disc4`,`ml5`,`uprof5`,`cprof5`,`weeks5`,`disc5`,`ml6`,`uprof6`,`cprof6`,`weeks6`,`disc6`,`ml7`,`uprof7`,`cprof7`,`weeks7`,`disc7`,`ml8`,`uprof8`,`cprof8`,`weeks8`,`disc8`,`smin`,`sord`,`fson`,`webupdate`,`sent`,`typenum`,`uvinseas`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:type,:name,:scat1,:scat2,:unit_case,:suprof,:scprof,:sweeks,:ml1,:uprof1,:cprof1,:weeks1,:ml2,:uprof2,:cprof2,:weeks2,:ml3,:uprof3,:cprof3,:weeks3,:ml4,:uprof4,:cprof4,:weeks4,:who,:disc,:disc1,:disc2,:disc3,:disc4,:ml5,:uprof5,:cprof5,:weeks5,:disc5,:ml6,:uprof6,:cprof6,:weeks6,:disc6,:ml7,:uprof7,:cprof7,:weeks7,:disc7,:ml8,:uprof8,:cprof8,:weeks8,:disc8,:smin,:sord,:fson,:webupdate,:sent,:typenum,:uvinseas,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`type` = :type,		`name` = :name,		`scat1` = :scat1,		`scat2` = :scat2,		`unit_case` = :unit_case,		`suprof` = :suprof,		`scprof` = :scprof,		`sweeks` = :sweeks,		`ml1` = :ml1,		`uprof1` = :uprof1,		`cprof1` = :cprof1,		`weeks1` = :weeks1,		`ml2` = :ml2,		`uprof2` = :uprof2,		`cprof2` = :cprof2,		`weeks2` = :weeks2,		`ml3` = :ml3,		`uprof3` = :uprof3,		`cprof3` = :cprof3,		`weeks3` = :weeks3,		`ml4` = :ml4,		`uprof4` = :uprof4,		`cprof4` = :cprof4,		`weeks4` = :weeks4,		`who` = :who,		`disc` = :disc,		`disc1` = :disc1,		`disc2` = :disc2,		`disc3` = :disc3,		`disc4` = :disc4,		`ml5` = :ml5,		`uprof5` = :uprof5,		`cprof5` = :cprof5,		`weeks5` = :weeks5,		`disc5` = :disc5,		`ml6` = :ml6,		`uprof6` = :uprof6,		`cprof6` = :cprof6,		`weeks6` = :weeks6,		`disc6` = :disc6,		`ml7` = :ml7,		`uprof7` = :uprof7,		`cprof7` = :cprof7,		`weeks7` = :weeks7,		`disc7` = :disc7,		`ml8` = :ml8,		`uprof8` = :uprof8,		`cprof8` = :cprof8,		`weeks8` = :weeks8,		`disc8` = :disc8,		`smin` = :smin,		`sord` = :sord,		`fson` = :fson,		`webupdate` = :webupdate,		`sent` = :sent,		`typenum` = :typenum,		`uvinseas` = :uvinseas,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thistype=strip_tags($data->type);		$thisname=strip_tags($data->name);		$thisscat1=strip_tags($data->scat1);		$thisscat2=strip_tags($data->scat2);		$thisunit_case=strip_tags($data->unit_case);		$thissuprof=strip_tags($data->suprof);		$thisscprof=strip_tags($data->scprof);		$thissweeks=strip_tags($data->sweeks);		$thisml1=strip_tags($data->ml1);		$thisuprof1=strip_tags($data->uprof1);		$thiscprof1=strip_tags($data->cprof1);		$thisweeks1=strip_tags($data->weeks1);		$thisml2=strip_tags($data->ml2);		$thisuprof2=strip_tags($data->uprof2);		$thiscprof2=strip_tags($data->cprof2);		$thisweeks2=strip_tags($data->weeks2);		$thisml3=strip_tags($data->ml3);		$thisuprof3=strip_tags($data->uprof3);		$thiscprof3=strip_tags($data->cprof3);		$thisweeks3=strip_tags($data->weeks3);		$thisml4=strip_tags($data->ml4);		$thisuprof4=strip_tags($data->uprof4);		$thiscprof4=strip_tags($data->cprof4);		$thisweeks4=strip_tags($data->weeks4);		$thiswho=strip_tags($data->who);		$thisdisc=strip_tags($data->disc);		$thisdisc1=strip_tags($data->disc1);		$thisdisc2=strip_tags($data->disc2);		$thisdisc3=strip_tags($data->disc3);		$thisdisc4=strip_tags($data->disc4);		$thisml5=strip_tags($data->ml5);		$thisuprof5=strip_tags($data->uprof5);		$thiscprof5=strip_tags($data->cprof5);		$thisweeks5=strip_tags($data->weeks5);		$thisdisc5=strip_tags($data->disc5);		$thisml6=strip_tags($data->ml6);		$thisuprof6=strip_tags($data->uprof6);		$thiscprof6=strip_tags($data->cprof6);		$thisweeks6=strip_tags($data->weeks6);		$thisdisc6=strip_tags($data->disc6);		$thisml7=strip_tags($data->ml7);		$thisuprof7=strip_tags($data->uprof7);		$thiscprof7=strip_tags($data->cprof7);		$thisweeks7=strip_tags($data->weeks7);		$thisdisc7=strip_tags($data->disc7);		$thisml8=strip_tags($data->ml8);		$thisuprof8=strip_tags($data->uprof8);		$thiscprof8=strip_tags($data->cprof8);		$thisweeks8=strip_tags($data->weeks8);		$thisdisc8=strip_tags($data->disc8);		$thissmin=strip_tags($data->smin);		$thissord=strip_tags($data->sord);		$thisfson=strip_tags($data->fson);		$thiswebupdate=strip_tags($data->webupdate);		$thissent=strip_tags($data->sent);		$thistypenum=strip_tags($data->typenum);		$thisuvinseas=strip_tags($data->uvinseas);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':name', $thisname);		$stmt->bindParam(':scat1', $thisscat1);		$stmt->bindParam(':scat2', $thisscat2);		$stmt->bindParam(':unit_case', $thisunit_case);		$stmt->bindParam(':suprof', $thissuprof);		$stmt->bindParam(':scprof', $thisscprof);		$stmt->bindParam(':sweeks', $thissweeks);		$stmt->bindParam(':ml1', $thisml1);		$stmt->bindParam(':uprof1', $thisuprof1);		$stmt->bindParam(':cprof1', $thiscprof1);		$stmt->bindParam(':weeks1', $thisweeks1);		$stmt->bindParam(':ml2', $thisml2);		$stmt->bindParam(':uprof2', $thisuprof2);		$stmt->bindParam(':cprof2', $thiscprof2);		$stmt->bindParam(':weeks2', $thisweeks2);		$stmt->bindParam(':ml3', $thisml3);		$stmt->bindParam(':uprof3', $thisuprof3);		$stmt->bindParam(':cprof3', $thiscprof3);		$stmt->bindParam(':weeks3', $thisweeks3);		$stmt->bindParam(':ml4', $thisml4);		$stmt->bindParam(':uprof4', $thisuprof4);		$stmt->bindParam(':cprof4', $thiscprof4);		$stmt->bindParam(':weeks4', $thisweeks4);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':disc', $thisdisc);		$stmt->bindParam(':disc1', $thisdisc1);		$stmt->bindParam(':disc2', $thisdisc2);		$stmt->bindParam(':disc3', $thisdisc3);		$stmt->bindParam(':disc4', $thisdisc4);		$stmt->bindParam(':ml5', $thisml5);		$stmt->bindParam(':uprof5', $thisuprof5);		$stmt->bindParam(':cprof5', $thiscprof5);		$stmt->bindParam(':weeks5', $thisweeks5);		$stmt->bindParam(':disc5', $thisdisc5);		$stmt->bindParam(':ml6', $thisml6);		$stmt->bindParam(':uprof6', $thisuprof6);		$stmt->bindParam(':cprof6', $thiscprof6);		$stmt->bindParam(':weeks6', $thisweeks6);		$stmt->bindParam(':disc6', $thisdisc6);		$stmt->bindParam(':ml7', $thisml7);		$stmt->bindParam(':uprof7', $thisuprof7);		$stmt->bindParam(':cprof7', $thiscprof7);		$stmt->bindParam(':weeks7', $thisweeks7);		$stmt->bindParam(':disc7', $thisdisc7);		$stmt->bindParam(':ml8', $thisml8);		$stmt->bindParam(':uprof8', $thisuprof8);		$stmt->bindParam(':cprof8', $thiscprof8);		$stmt->bindParam(':weeks8', $thisweeks8);		$stmt->bindParam(':disc8', $thisdisc8);		$stmt->bindParam(':smin', $thissmin);		$stmt->bindParam(':sord', $thissord);		$stmt->bindParam(':fson', $thisfson);		$stmt->bindParam(':webupdate', $thiswebupdate);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':typenum', $thistypenum);		$stmt->bindParam(':uvinseas', $thisuvinseas);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>