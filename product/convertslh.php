<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO slh (`listnum`,`listname`,`by`,`descript`,`type`,`promo`,`onsale`,`reprice`,`store`,`status`,`start`,`stop`,`cases`,`sales`,`profit`,`who`,`sent`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:listnum,:listname,:by,:descript,:type,:promo,:onsale,:reprice,:store,:status,:start,:stop,:cases,:sales,:profit,:who,:sent,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`listnum` = :listnum,		`listname` = :listname,		`by` = :by,		`descript` = :descript,		`type` = :type,		`promo` = :promo,		`onsale` = :onsale,		`reprice` = :reprice,		`store` = :store,		`status` = :status,		`start` = :start,		`stop` = :stop,		`cases` = :cases,		`sales` = :sales,		`profit` = :profit,		`who` = :who,		`sent` = :sent,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thislistnum=strip_tags($data->listnum);		$thislistname=strip_tags($data->listname);		$thisby=strip_tags($data->by);		$thisdescript=strip_tags($data->descript);		$thistype=strip_tags($data->type);		$thispromo=strip_tags($data->promo);		$thisonsale=strip_tags($data->onsale);		$thisreprice=strip_tags($data->reprice);		$thisstore=strip_tags($data->store);		$thisstatus=strip_tags($data->status);		$thisstart=strip_tags($data->start);		$thisstop=strip_tags($data->stop);		$thiscases=strip_tags($data->cases);		$thissales=strip_tags($data->sales);		$thisprofit=strip_tags($data->profit);		$thiswho=strip_tags($data->who);		$thissent=strip_tags($data->sent);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':listnum', $thislistnum);		$stmt->bindParam(':listname', $thislistname);		$stmt->bindParam(':by', $thisby);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':promo', $thispromo);		$stmt->bindParam(':onsale', $thisonsale);		$stmt->bindParam(':reprice', $thisreprice);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':status', $thisstatus);		$stmt->bindParam(':start', $thisstart);		$stmt->bindParam(':stop', $thisstop);		$stmt->bindParam(':cases', $thiscases);		$stmt->bindParam(':sales', $thissales);		$stmt->bindParam(':profit', $thisprofit);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>