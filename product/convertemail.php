<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO email (`id`,`from`,`to`,`store`,`subject`,`content`,`attach`,`files`,`blank`,`flag`,`toid`,`fromid`,`new`,`sent`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:id,:from,:to,:store,:subject,:content,:attach,:files,:blank,:flag,:toid,:fromid,:new,:sent,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`id` = :id,		`from` = :from,		`to` = :to,		`store` = :store,		`subject` = :subject,		`content` = :content,		`attach` = :attach,		`files` = :files,		`blank` = :blank,		`flag` = :flag,		`toid` = :toid,		`fromid` = :fromid,		`new` = :new,		`sent` = :sent,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thisid=strip_tags($data->id);		$thisfrom=strip_tags($data->from);		$thisto=strip_tags($data->to);		$thisstore=strip_tags($data->store);		$thissubject=strip_tags($data->subject);		$thiscontent=strip_tags($data->content);		$thisattach=strip_tags($data->attach);		$thisfiles=strip_tags($data->files);		$thisblank=strip_tags($data->blank);		$thisflag=strip_tags($data->flag);		$thistoid=strip_tags($data->toid);		$thisfromid=strip_tags($data->fromid);		$thisnew=strip_tags($data->new);		$thissent=strip_tags($data->sent);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':id', $thisid);		$stmt->bindParam(':from', $thisfrom);		$stmt->bindParam(':to', $thisto);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':subject', $thissubject);		$stmt->bindParam(':content', $thiscontent);		$stmt->bindParam(':attach', $thisattach);		$stmt->bindParam(':files', $thisfiles);		$stmt->bindParam(':blank', $thisblank);		$stmt->bindParam(':flag', $thisflag);		$stmt->bindParam(':toid', $thistoid);		$stmt->bindParam(':fromid', $thisfromid);		$stmt->bindParam(':new', $thisnew);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>