<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO cus (`customer`,`firstname`,`lastname`,`status`,`street1`,`street2`,`city`,`state`,`zip`,`contact`,`phone`,`fax`,`modem`,`startdate`,`taxcode`,`terms`,`shipvia`,`statement`,`crdlimit`,`balance`,`store`,`salesper`,`clubcard`,`clublist`,`clubdisc`,`altid`,`types`,`department`,`who`,`memo`,`storelevel`,`billto`,`wslicense`,`wsexpire`,`wetdry`,`taxid`,`invoicemsg`,`statementm`,`territory`,`filter`,`email`,`sflag`,`fcflag`,`printbal`,`cdate`,`scldate`,`fson`,`fscpts`,`fstpts`,`fsdlrval`,`fsdlrcrdts`,`creditcard`,`expire`,`cvv`,`sent`,`wphone`,`fsfactor`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:customer,:firstname,:lastname,:status,:street1,:street2,:city,:state,:zip,:contact,:phone,:fax,:modem,:startdate,:taxcode,:terms,:shipvia,:statement,:crdlimit,:balance,:store,:salesper,:clubcard,:clublist,:clubdisc,:altid,:types,:department,:who,:memo,:storelevel,:billto,:wslicense,:wsexpire,:wetdry,:taxid,:invoicemsg,:statementm,:territory,:filter,:email,:sflag,:fcflag,:printbal,:cdate,:scldate,:fson,:fscpts,:fstpts,:fsdlrval,:fsdlrcrdts,:creditcard,:expire,:cvv,:sent,:wphone,:fsfactor,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`customer` = :customer,		`firstname` = :firstname,		`lastname` = :lastname,		`status` = :status,		`street1` = :street1,		`street2` = :street2,		`city` = :city,		`state` = :state,		`zip` = :zip,		`contact` = :contact,		`phone` = :phone,		`fax` = :fax,		`modem` = :modem,		`startdate` = :startdate,		`taxcode` = :taxcode,		`terms` = :terms,		`shipvia` = :shipvia,		`statement` = :statement,		`crdlimit` = :crdlimit,		`balance` = :balance,		`store` = :store,		`salesper` = :salesper,		`clubcard` = :clubcard,		`clublist` = :clublist,		`clubdisc` = :clubdisc,		`altid` = :altid,		`types` = :types,		`department` = :department,		`who` = :who,		`memo` = :memo,		`storelevel` = :storelevel,		`billto` = :billto,		`wslicense` = :wslicense,		`wsexpire` = :wsexpire,		`wetdry` = :wetdry,		`taxid` = :taxid,		`invoicemsg` = :invoicemsg,		`statementm` = :statementm,		`territory` = :territory,		`filter` = :filter,		`email` = :email,		`sflag` = :sflag,		`fcflag` = :fcflag,		`printbal` = :printbal,		`cdate` = :cdate,		`scldate` = :scldate,		`fson` = :fson,		`fscpts` = :fscpts,		`fstpts` = :fstpts,		`fsdlrval` = :fsdlrval,		`fsdlrcrdts` = :fsdlrcrdts,		`creditcard` = :creditcard,		`expire` = :expire,		`cvv` = :cvv,		`sent` = :sent,		`wphone` = :wphone,		`fsfactor` = :fsfactor,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thiscustomer=strip_tags($data->customer);		$thisfirstname=strip_tags($data->firstname);		$thislastname=strip_tags($data->lastname);		$thisstatus=strip_tags($data->status);		$thisstreet1=strip_tags($data->street1);		$thisstreet2=strip_tags($data->street2);		$thiscity=strip_tags($data->city);		$thisstate=strip_tags($data->state);		$thiszip=strip_tags($data->zip);		$thiscontact=strip_tags($data->contact);		$thisphone=strip_tags($data->phone);		$thisfax=strip_tags($data->fax);		$thismodem=strip_tags($data->modem);		$thisstartdate=strip_tags($data->startdate);		$thistaxcode=strip_tags($data->taxcode);		$thisterms=strip_tags($data->terms);		$thisshipvia=strip_tags($data->shipvia);		$thisstatement=strip_tags($data->statement);		$thiscrdlimit=strip_tags($data->crdlimit);		$thisbalance=strip_tags($data->balance);		$thisstore=strip_tags($data->store);		$thissalesper=strip_tags($data->salesper);		$thisclubcard=strip_tags($data->clubcard);		$thisclublist=strip_tags($data->clublist);		$thisclubdisc=strip_tags($data->clubdisc);		$thisaltid=strip_tags($data->altid);		$thistypes=strip_tags($data->types);		$thisdepartment=strip_tags($data->department);		$thiswho=strip_tags($data->who);		$thismemo=strip_tags($data->memo);		$thisstorelevel=strip_tags($data->storelevel);		$thisbillto=strip_tags($data->billto);		$thiswslicense=strip_tags($data->wslicense);		$thiswsexpire=strip_tags($data->wsexpire);		$thiswetdry=strip_tags($data->wetdry);		$thistaxid=strip_tags($data->taxid);		$thisinvoicemsg=strip_tags($data->invoicemsg);		$thisstatementm=strip_tags($data->statementm);		$thisterritory=strip_tags($data->territory);		$thisfilter=strip_tags($data->filter);		$thisemail=strip_tags($data->email);		$thissflag=strip_tags($data->sflag);		$thisfcflag=strip_tags($data->fcflag);		$thisprintbal=strip_tags($data->printbal);		$thiscdate=strip_tags($data->cdate);		$thisscldate=strip_tags($data->scldate);		$thisfson=strip_tags($data->fson);		$thisfscpts=strip_tags($data->fscpts);		$thisfstpts=strip_tags($data->fstpts);		$thisfsdlrval=strip_tags($data->fsdlrval);		$thisfsdlrcrdts=strip_tags($data->fsdlrcrdts);		$thiscreditcard=strip_tags($data->creditcard);		$thisexpire=strip_tags($data->expire);		$thiscvv=strip_tags($data->cvv);		$thissent=strip_tags($data->sent);		$thiswphone=strip_tags($data->wphone);		$thisfsfactor=strip_tags($data->fsfactor);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':customer', $thiscustomer);		$stmt->bindParam(':firstname', $thisfirstname);		$stmt->bindParam(':lastname', $thislastname);		$stmt->bindParam(':status', $thisstatus);		$stmt->bindParam(':street1', $thisstreet1);		$stmt->bindParam(':street2', $thisstreet2);		$stmt->bindParam(':city', $thiscity);		$stmt->bindParam(':state', $thisstate);		$stmt->bindParam(':zip', $thiszip);		$stmt->bindParam(':contact', $thiscontact);		$stmt->bindParam(':phone', $thisphone);		$stmt->bindParam(':fax', $thisfax);		$stmt->bindParam(':modem', $thismodem);		$stmt->bindParam(':startdate', $thisstartdate);		$stmt->bindParam(':taxcode', $thistaxcode);		$stmt->bindParam(':terms', $thisterms);		$stmt->bindParam(':shipvia', $thisshipvia);		$stmt->bindParam(':statement', $thisstatement);		$stmt->bindParam(':crdlimit', $thiscrdlimit);		$stmt->bindParam(':balance', $thisbalance);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':salesper', $thissalesper);		$stmt->bindParam(':clubcard', $thisclubcard);		$stmt->bindParam(':clublist', $thisclublist);		$stmt->bindParam(':clubdisc', $thisclubdisc);		$stmt->bindParam(':altid', $thisaltid);		$stmt->bindParam(':types', $thistypes);		$stmt->bindParam(':department', $thisdepartment);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':storelevel', $thisstorelevel);		$stmt->bindParam(':billto', $thisbillto);		$stmt->bindParam(':wslicense', $thiswslicense);		$stmt->bindParam(':wsexpire', $thiswsexpire);		$stmt->bindParam(':wetdry', $thiswetdry);		$stmt->bindParam(':taxid', $thistaxid);		$stmt->bindParam(':invoicemsg', $thisinvoicemsg);		$stmt->bindParam(':statementm', $thisstatementm);		$stmt->bindParam(':territory', $thisterritory);		$stmt->bindParam(':filter', $thisfilter);		$stmt->bindParam(':email', $thisemail);		$stmt->bindParam(':sflag', $thissflag);		$stmt->bindParam(':fcflag', $thisfcflag);		$stmt->bindParam(':printbal', $thisprintbal);		$stmt->bindParam(':cdate', $thiscdate);		$stmt->bindParam(':scldate', $thisscldate);		$stmt->bindParam(':fson', $thisfson);		$stmt->bindParam(':fscpts', $thisfscpts);		$stmt->bindParam(':fstpts', $thisfstpts);		$stmt->bindParam(':fsdlrval', $thisfsdlrval);		$stmt->bindParam(':fsdlrcrdts', $thisfsdlrcrdts);		$stmt->bindParam(':creditcard', $thiscreditcard);		$stmt->bindParam(':expire', $thisexpire);		$stmt->bindParam(':cvv', $thiscvv);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':wphone', $thiswphone);		$stmt->bindParam(':fsfactor', $thisfsfactor);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>