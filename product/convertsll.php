<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO sll (`listnum`,`line`,`listname`,`sku`,`type`,`descript`,`sname`,`ml`,`level`,`qty`,`price`,`cost`,`percent`,`dcode`,`status`,`onsale`,`prevqty`,`prevprice`,`prevdcode`,`prevonsale`,`actdate`,`units`,`sales`,`profit`,`store`,`labels`,`prevpromo`,`adate`,`mcost`,`stype`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:listnum,:line,:listname,:sku,:type,:descript,:sname,:ml,:level,:qty,:price,:cost,:percent,:dcode,:status,:onsale,:prevqty,:prevprice,:prevdcode,:prevonsale,:actdate,:units,:sales,:profit,:store,:labels,:prevpromo,:adate,:mcost,:stype,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`listnum` = :listnum,		`line` = :line,		`listname` = :listname,		`sku` = :sku,		`type` = :type,		`descript` = :descript,		`sname` = :sname,		`ml` = :ml,		`level` = :level,		`qty` = :qty,		`price` = :price,		`cost` = :cost,		`percent` = :percent,		`dcode` = :dcode,		`status` = :status,		`onsale` = :onsale,		`prevqty` = :prevqty,		`prevprice` = :prevprice,		`prevdcode` = :prevdcode,		`prevonsale` = :prevonsale,		`actdate` = :actdate,		`units` = :units,		`sales` = :sales,		`profit` = :profit,		`store` = :store,		`labels` = :labels,		`prevpromo` = :prevpromo,		`adate` = :adate,		`mcost` = :mcost,		`stype` = :stype,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thislistnum=strip_tags($data->listnum);		$thisline=strip_tags($data->line);		$thislistname=strip_tags($data->listname);		$thissku=strip_tags($data->sku);		$thistype=strip_tags($data->type);		$thisdescript=strip_tags($data->descript);		$thissname=strip_tags($data->sname);		$thisml=strip_tags($data->ml);		$thislevel=strip_tags($data->level);		$thisqty=strip_tags($data->qty);		$thisprice=strip_tags($data->price);		$thiscost=strip_tags($data->cost);		$thispercent=strip_tags($data->percent);		$thisdcode=strip_tags($data->dcode);		$thisstatus=strip_tags($data->status);		$thisonsale=strip_tags($data->onsale);		$thisprevqty=strip_tags($data->prevqty);		$thisprevprice=strip_tags($data->prevprice);		$thisprevdcode=strip_tags($data->prevdcode);		$thisprevonsale=strip_tags($data->prevonsale);		$thisactdate=strip_tags($data->actdate);		$thisunits=strip_tags($data->units);		$thissales=strip_tags($data->sales);		$thisprofit=strip_tags($data->profit);		$thisstore=strip_tags($data->store);		$thislabels=strip_tags($data->labels);		$thisprevpromo=strip_tags($data->prevpromo);		$thisadate=strip_tags($data->adate);		$thismcost=strip_tags($data->mcost);		$thisstype=strip_tags($data->stype);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':listnum', $thislistnum);		$stmt->bindParam(':line', $thisline);		$stmt->bindParam(':listname', $thislistname);		$stmt->bindParam(':sku', $thissku);		$stmt->bindParam(':type', $thistype);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':sname', $thissname);		$stmt->bindParam(':ml', $thisml);		$stmt->bindParam(':level', $thislevel);		$stmt->bindParam(':qty', $thisqty);		$stmt->bindParam(':price', $thisprice);		$stmt->bindParam(':cost', $thiscost);		$stmt->bindParam(':percent', $thispercent);		$stmt->bindParam(':dcode', $thisdcode);		$stmt->bindParam(':status', $thisstatus);		$stmt->bindParam(':onsale', $thisonsale);		$stmt->bindParam(':prevqty', $thisprevqty);		$stmt->bindParam(':prevprice', $thisprevprice);		$stmt->bindParam(':prevdcode', $thisprevdcode);		$stmt->bindParam(':prevonsale', $thisprevonsale);		$stmt->bindParam(':actdate', $thisactdate);		$stmt->bindParam(':units', $thisunits);		$stmt->bindParam(':sales', $thissales);		$stmt->bindParam(':profit', $thisprofit);		$stmt->bindParam(':store', $thisstore);		$stmt->bindParam(':labels', $thislabels);		$stmt->bindParam(':prevpromo', $thisprevpromo);		$stmt->bindParam(':adate', $thisadate);		$stmt->bindParam(':mcost', $thismcost);		$stmt->bindParam(':stype', $thisstype);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>