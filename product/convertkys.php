<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO kys (`keyboard`,`page`,`key`,`keyname`,`cat`,`receipts`,`customer`,`function`,`change`,`credit`,`balance`,`active`,`security`,`who`,`catname`,`keyorder`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:keyboard,:page,:key,:keyname,:cat,:receipts,:customer,:function,:change,:credit,:balance,:active,:security,:who,:catname,:keyorder,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`keyboard` = :keyboard,		`page` = :page,		`key` = :key,		`keyname` = :keyname,		`cat` = :cat,		`receipts` = :receipts,		`customer` = :customer,		`function` = :function,		`change` = :change,		`credit` = :credit,		`balance` = :balance,		`active` = :active,		`security` = :security,		`who` = :who,		`catname` = :catname,		`keyorder` = :keyorder,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thiskeyboard=strip_tags($data->keyboard);		$thispage=strip_tags($data->page);		$thiskey=strip_tags($data->key);		$thiskeyname=strip_tags($data->keyname);		$thiscat=strip_tags($data->cat);		$thisreceipts=strip_tags($data->receipts);		$thiscustomer=strip_tags($data->customer);		$thisfunction=strip_tags($data->function);		$thischange=strip_tags($data->change);		$thiscredit=strip_tags($data->credit);		$thisbalance=strip_tags($data->balance);		$thisactive=strip_tags($data->active);		$thissecurity=strip_tags($data->security);		$thiswho=strip_tags($data->who);		$thiscatname=strip_tags($data->catname);		$thiskeyorder=strip_tags($data->keyorder);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':keyboard', $thiskeyboard);		$stmt->bindParam(':page', $thispage);		$stmt->bindParam(':key', $thiskey);		$stmt->bindParam(':keyname', $thiskeyname);		$stmt->bindParam(':cat', $thiscat);		$stmt->bindParam(':receipts', $thisreceipts);		$stmt->bindParam(':customer', $thiscustomer);		$stmt->bindParam(':function', $thisfunction);		$stmt->bindParam(':change', $thischange);		$stmt->bindParam(':credit', $thiscredit);		$stmt->bindParam(':balance', $thisbalance);		$stmt->bindParam(':active', $thisactive);		$stmt->bindParam(':security', $thissecurity);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':catname', $thiscatname);		$stmt->bindParam(':keyorder', $thiskeyorder);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>