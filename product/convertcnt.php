<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO cnt (`code`,`seq`,`question`,`data`,`memvar`,`updatereg`,`who`,`memo`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:code,:seq,:question,:data,:memvar,:updatereg,:who,:memo,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`code` = :code,		`seq` = :seq,		`question` = :question,		`data` = :data,		`memvar` = :memvar,		`updatereg` = :updatereg,		`who` = :who,		`memo` = :memo,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thiscode=strip_tags($data->code);		$thisseq=strip_tags($data->seq);		$thisquestion=strip_tags($data->question);		$thisdata=strip_tags($data->data);		$thismemvar=strip_tags($data->memvar);		$thisupdatereg=strip_tags($data->updatereg);		$thiswho=strip_tags($data->who);		$thismemo=strip_tags($data->memo);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':code', $thiscode);		$stmt->bindParam(':seq', $thisseq);		$stmt->bindParam(':question', $thisquestion);		$stmt->bindParam(':data', $thisdata);		$stmt->bindParam(':memvar', $thismemvar);		$stmt->bindParam(':updatereg', $thisupdatereg);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':memo', $thismemo);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>