<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO reports (`crepname`,`creptype`,`cappname`,`crptname`,`rundate`,`runwho`,`class`,`level`,`gph`,`criteria`,`mquery`,`who`,`parent`,`key`,`image`,`descript`,`editable`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:crepname,:creptype,:cappname,:crptname,:rundate,:runwho,:class,:level,:gph,:criteria,:mquery,:who,:parent,:key,:image,:descript,:editable,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`crepname` = :crepname,		`creptype` = :creptype,		`cappname` = :cappname,		`crptname` = :crptname,		`rundate` = :rundate,		`runwho` = :runwho,		`class` = :class,		`level` = :level,		`gph` = :gph,		`criteria` = :criteria,		`mquery` = :mquery,		`who` = :who,		`parent` = :parent,		`key` = :key,		`image` = :image,		`descript` = :descript,		`editable` = :editable,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thiscrepname=strip_tags($data->crepname);		$thiscreptype=strip_tags($data->creptype);		$thiscappname=strip_tags($data->cappname);		$thiscrptname=strip_tags($data->crptname);		$thisrundate=strip_tags($data->rundate);		$thisrunwho=strip_tags($data->runwho);		$thisclass=strip_tags($data->class);		$thislevel=strip_tags($data->level);		$thisgph=strip_tags($data->gph);		$thiscriteria=strip_tags($data->criteria);		$thismquery=strip_tags($data->mquery);		$thiswho=strip_tags($data->who);		$thisparent=strip_tags($data->parent);		$thiskey=strip_tags($data->key);		$thisimage=strip_tags($data->image);		$thisdescript=strip_tags($data->descript);		$thiseditable=strip_tags($data->editable);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':crepname', $thiscrepname);		$stmt->bindParam(':creptype', $thiscreptype);		$stmt->bindParam(':cappname', $thiscappname);		$stmt->bindParam(':crptname', $thiscrptname);		$stmt->bindParam(':rundate', $thisrundate);		$stmt->bindParam(':runwho', $thisrunwho);		$stmt->bindParam(':class', $thisclass);		$stmt->bindParam(':level', $thislevel);		$stmt->bindParam(':gph', $thisgph);		$stmt->bindParam(':criteria', $thiscriteria);		$stmt->bindParam(':mquery', $thismquery);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':parent', $thisparent);		$stmt->bindParam(':key', $thiskey);		$stmt->bindParam(':image', $thisimage);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':editable', $thiseditable);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>