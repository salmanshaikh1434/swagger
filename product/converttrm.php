<?php	header("Access-Control-Allow-Origin: *");	header("Content-Type: application/json; charset=UTF-8");	header("Access-Control-Allow-Methods: POST");	header("Access-Control-Max-Age: 3600");	header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");	include_once '../config/database.php';	$database = new Database();	$db = $database->getConnection();	$bulk = json_decode(file_get_contents("php://input"));	$stmt = $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$stmt = $db->beginTransaction(); 	foreach($bulk->records as $data){		try {		$query = "INSERT INTO trm (`terms`,`descript`,`priority`,`invoice`,`credit`,`purchase`,`vcredit`,`netdays`,`billby`,`dueday1`,`dueday2`,`who`,`sent`,`tstamp`,`isdel`,`lreg`,`lstore`)			VALUES 		(:terms,:descript,:priority,:invoice,:credit,:purchase,:vcredit,:netdays,:billby,:dueday1,:dueday2,:who,:sent,now(),0,:lreg,:lstore)		ON DUPLICATE KEY UPDATE		`terms` = :terms,		`descript` = :descript,		`priority` = :priority,		`invoice` = :invoice,		`credit` = :credit,		`purchase` = :purchase,		`vcredit` = :vcredit,		`netdays` = :netdays,		`billby` = :billby,		`dueday1` = :dueday1,		`dueday2` = :dueday2,		`who` = :who,		`sent` = :sent,		`tstamp` = NOW(),		`lstore` = :lstore,		`lreg` = :lreg,		`isdel` = :isdel";		$stmt = $db->prepare($query);		$thisterms=strip_tags($data->terms);		$thisdescript=strip_tags($data->descript);		$thispriority=strip_tags($data->priority);		$thisinvoice=strip_tags($data->invoice);		$thiscredit=strip_tags($data->credit);		$thispurchase=strip_tags($data->purchase);		$thisvcredit=strip_tags($data->vcredit);		$thisnetdays=strip_tags($data->netdays);		$thisbillby=strip_tags($data->billby);		$thisdueday1=strip_tags($data->dueday1);		$thisdueday2=strip_tags($data->dueday2);		$thiswho=strip_tags($data->who);		$thissent=strip_tags($data->sent);		$thislreg=strip_tags($data->lreg);		$thislstore=strip_tags($data->lstore);		$thisisdel=strip_tags($data->isdel);		$thiststamp=strip_tags($data->tstamp);		$stmt->bindParam(':terms', $thisterms);		$stmt->bindParam(':descript', $thisdescript);		$stmt->bindParam(':priority', $thispriority);		$stmt->bindParam(':invoice', $thisinvoice);		$stmt->bindParam(':credit', $thiscredit);		$stmt->bindParam(':purchase', $thispurchase);		$stmt->bindParam(':vcredit', $thisvcredit);		$stmt->bindParam(':netdays', $thisnetdays);		$stmt->bindParam(':billby', $thisbillby);		$stmt->bindParam(':dueday1', $thisdueday1);		$stmt->bindParam(':dueday2', $thisdueday2);		$stmt->bindParam(':who', $thiswho);		$stmt->bindParam(':sent', $thissent);		$stmt->bindParam(':lreg', $thislreg);		$stmt->bindParam(':lstore', $thislstore);		$stmt->bindParam(':isdel', $thisisdel);		$stmt->bindParam(':tstamp', $thiststamp);		$stmt->execute();		} catch (PDOException $e) {			$message = $e->getMessage();			echo $message;		}		}		$spiritsEND=$db->commit();		if($spiritsEND==TRUE){			http_response_code(200);			echo json_encode(array("message" => "UPDATED.."));		}		else{			http_response_code(503);			echo json_encode(array("message" => "ERROR UPDATING!!"));			echo json_encode(array("error" =>$spiritsEND));		}?>